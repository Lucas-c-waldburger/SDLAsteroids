struct LineDraw
	{
		enum LD_FLAG_VALUES
		{
			destinationIsSet = 1 << 0,
			originIsSet = 1 << 1,
			readyToDraw = 1 << 2,
			hasBeenDrawn = 1 << 3,
		};

		LineDraw(SDL_Renderer* renderer) : rendererCpy(renderer) {}

		SDL_Point destination = { 0, 0 }, origin = { 0, 0 };
		GameFlags ldFlags;
		SDL_Renderer* rendererCpy;

		void setOrigin()
		{
			SDL_GetMouseState(&origin.x, &origin.y);
			ldFlags.setFlag(originIsSet);
		}

		void setDestination()
		{
			SDL_GetMouseState(&destination.x, &destination.y);
			ldFlags.setFlag(destinationIsSet);
		}

		void draw()
		{
			SDL_SetRenderDrawColor(rendererCpy, 0x00, 0x00, 0x00, 0xFF);
			SDL_RenderDrawLine(rendererCpy, origin.x, origin.y, destination.x, destination.y);
			ldFlags.setFlag(hasBeenDrawn);
		}

		void handleEvent(SDL_Event* e)
		{
			if (e->type == SDL_MOUSEBUTTONDOWN)
			{
				if (ldFlags.isSet(originIsSet) && ldFlags.isSet(destinationIsSet) && ldFlags.isSet(hasBeenDrawn))
				{
					ldFlags.flagValue = 0;
				}
				if (!ldFlags.isSet(originIsSet))
				{
					setOrigin();
				}
				else if (!ldFlags.isSet(destinationIsSet))
				{
					setDestination();
					ldFlags.setFlag(readyToDraw);
				}
			}
		}
	};